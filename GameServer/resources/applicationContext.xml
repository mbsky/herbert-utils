<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">

	<description>Spring公共配置</description>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<!-- 标准配置 -->
				<value>classpath*:/application.properties</value>
				<!-- 本地开发环境配置 -->
				<value>classpath*:/application.local.properties</value>
				<!-- 测试环境配置 -->
				<value>classpath*:/application.test.properties</value>
				<!-- 本地测试环境配置 -->
				<value>classpath*:/application.test-local.properties</value>
			</list>
		</property>
	</bean>

	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:annotation-config />
	<context:component-scan base-package="lion">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<context:component-scan base-package="game">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>


	<!-- spring-data-redis配置 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.server}" />
		<property name="port" value="${redis.port}" />
	</bean>

	<!-- redis template definition -->
	<!-- bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" 
		p:connection-factory-ref="jedisConnectionFactory"> </bean -->

	<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<bean id="protobufRedisTemplate" class="lion.core.ProtobufRedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<!-- 以静态变量保存ApplicationContext -->
	<bean id="springContextHolder" class="lion.core.SpringContextHolder" lazy-init="false" />

	<!-- 第一个数据库 Master 负责写 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName">
			<value>${mysql.classname}</value>
		</property>
		<property name="url">
			<value>${mysql.url}</value>
		</property>
		<property name="username">
			<value>${mysql.username}</value>
		</property>
		<property name="password">
			<value>${mysql.password}</value>
		</property>

		<!-- Connection Pooling DBCP -->
		<!-- 初始化时创建的连接数 -->
		<property name="initialSize" value="5" />
		<!-- 最大连接数据库连接数，设置为0时，表示没有限制； -->
		<property name="maxActive" value="100" />
		<!-- 最大等待连接中的数量，设置为0时，表示没有限制； -->
		<property name="maxIdle" value="30" />
		<!-- 最大等待秒数，单位为毫秒， 超过时间会报出错误信息； -->
		<property name="maxWait" value="30000" />
		<!-- 是否可用预执行 -->
		<property name="poolPreparedStatements" value="true" />
		<!-- 设置从数据源中返回的连接是否采用自动提交机制，默认值为 true；false支持事务 -->
		<property name="defaultAutoCommit" value="false" />
	</bean>

	<!-- 第二个数据库 Slave 负责读 -->
	<bean id="dataSourceSlave" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName">
			<value>${mysql.classname}</value>
		</property>
		<property name="url">
			<value>${mysql.url1}</value>
		</property>
		<property name="username">
			<value>${mysql.username1}</value>
		</property>
		<property name="password">
			<value>${mysql.password1}</value>
		</property>

		<!-- Connection Pooling DBCP -->
		<!-- 初始化时创建的连接数 -->
		<property name="initialSize" value="5" />
		<!-- 最大连接数据库连接数，设置为0时，表示没有限制； -->
		<property name="maxActive" value="100" />
		<!-- 最大等待连接中的数量，设置为0时，表示没有限制； -->
		<property name="maxIdle" value="30" />
		<!-- 最大等待秒数，单位为毫秒， 超过时间会报出错误信息； -->
		<property name="maxWait" value="30000" />
		<!-- 是否可用预执行 -->
		<property name="poolPreparedStatements" value="true" />
		<!-- 设置从数据源中返回的连接是否采用自动提交机制，默认值为 true；false支持事务 -->
		<property name="defaultAutoCommit" value="true" />
	</bean>

	<!-- SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:conf/sqlmap/SqlMapConfig.xml"></property>
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:conf/sqlmap/mysql/mappers-*.xml"></property>
	</bean>
	
	<!-- SqlQuerySessionFactory -->
	<bean id="sqlQuerySessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:conf/sqlmap/SqlMapConfig.xml"></property>
		<property name="dataSource" ref="dataSourceSlave" />
		<property name="mapperLocations" value="classpath*:conf/sqlmap/mysql/mappers-*.xml"></property>
	</bean>
	

	<!-- 以 @Transactional 标注来定义事务 proxy-target-class="true" -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--JDBC事务管理器,根据你的情况使用不同的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
	</bean>


</beans>