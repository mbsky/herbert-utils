package net.snake.dao.totem;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TotemExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    protected List oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    public TotemExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    protected TotemExample(TotemExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table t_totem
     *
     * @ibatorgenerated Wed Apr 06 16:29:12 CST 2011
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("f_id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("f_id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("f_id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("f_id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("f_id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("f_id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("f_id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("f_id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List values) {
            addCriterion("f_id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List values) {
            addCriterion("f_id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("f_id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("f_id not between", value1, value2, "id");
            return this;
        }

        public Criteria andNameIsNull() {
            addCriterion("f_name is null");
            return this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("f_name is not null");
            return this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("f_name =", value, "name");
            return this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("f_name <>", value, "name");
            return this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("f_name >", value, "name");
            return this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("f_name >=", value, "name");
            return this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("f_name <", value, "name");
            return this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("f_name <=", value, "name");
            return this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("f_name like", value, "name");
            return this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("f_name not like", value, "name");
            return this;
        }

        public Criteria andNameIn(List values) {
            addCriterion("f_name in", values, "name");
            return this;
        }

        public Criteria andNameNotIn(List values) {
            addCriterion("f_name not in", values, "name");
            return this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("f_name between", value1, value2, "name");
            return this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("f_name not between", value1, value2, "name");
            return this;
        }

        public Criteria andMinProbilityIsNull() {
            addCriterion("f_min_probility is null");
            return this;
        }

        public Criteria andMinProbilityIsNotNull() {
            addCriterion("f_min_probility is not null");
            return this;
        }

        public Criteria andMinProbilityEqualTo(Integer value) {
            addCriterion("f_min_probility =", value, "minProbility");
            return this;
        }

        public Criteria andMinProbilityNotEqualTo(Integer value) {
            addCriterion("f_min_probility <>", value, "minProbility");
            return this;
        }

        public Criteria andMinProbilityGreaterThan(Integer value) {
            addCriterion("f_min_probility >", value, "minProbility");
            return this;
        }

        public Criteria andMinProbilityGreaterThanOrEqualTo(Integer value) {
            addCriterion("f_min_probility >=", value, "minProbility");
            return this;
        }

        public Criteria andMinProbilityLessThan(Integer value) {
            addCriterion("f_min_probility <", value, "minProbility");
            return this;
        }

        public Criteria andMinProbilityLessThanOrEqualTo(Integer value) {
            addCriterion("f_min_probility <=", value, "minProbility");
            return this;
        }

        public Criteria andMinProbilityIn(List values) {
            addCriterion("f_min_probility in", values, "minProbility");
            return this;
        }

        public Criteria andMinProbilityNotIn(List values) {
            addCriterion("f_min_probility not in", values, "minProbility");
            return this;
        }

        public Criteria andMinProbilityBetween(Integer value1, Integer value2) {
            addCriterion("f_min_probility between", value1, value2, "minProbility");
            return this;
        }

        public Criteria andMinProbilityNotBetween(Integer value1, Integer value2) {
            addCriterion("f_min_probility not between", value1, value2, "minProbility");
            return this;
        }

        public Criteria andMaxProbilityIsNull() {
            addCriterion("f_max_probility is null");
            return this;
        }

        public Criteria andMaxProbilityIsNotNull() {
            addCriterion("f_max_probility is not null");
            return this;
        }

        public Criteria andMaxProbilityEqualTo(Integer value) {
            addCriterion("f_max_probility =", value, "maxProbility");
            return this;
        }

        public Criteria andMaxProbilityNotEqualTo(Integer value) {
            addCriterion("f_max_probility <>", value, "maxProbility");
            return this;
        }

        public Criteria andMaxProbilityGreaterThan(Integer value) {
            addCriterion("f_max_probility >", value, "maxProbility");
            return this;
        }

        public Criteria andMaxProbilityGreaterThanOrEqualTo(Integer value) {
            addCriterion("f_max_probility >=", value, "maxProbility");
            return this;
        }

        public Criteria andMaxProbilityLessThan(Integer value) {
            addCriterion("f_max_probility <", value, "maxProbility");
            return this;
        }

        public Criteria andMaxProbilityLessThanOrEqualTo(Integer value) {
            addCriterion("f_max_probility <=", value, "maxProbility");
            return this;
        }

        public Criteria andMaxProbilityIn(List values) {
            addCriterion("f_max_probility in", values, "maxProbility");
            return this;
        }

        public Criteria andMaxProbilityNotIn(List values) {
            addCriterion("f_max_probility not in", values, "maxProbility");
            return this;
        }

        public Criteria andMaxProbilityBetween(Integer value1, Integer value2) {
            addCriterion("f_max_probility between", value1, value2, "maxProbility");
            return this;
        }

        public Criteria andMaxProbilityNotBetween(Integer value1, Integer value2) {
            addCriterion("f_max_probility not between", value1, value2, "maxProbility");
            return this;
        }

        public Criteria andAttackEnhanceIsNull() {
            addCriterion("f_attack_enhance is null");
            return this;
        }

        public Criteria andAttackEnhanceIsNotNull() {
            addCriterion("f_attack_enhance is not null");
            return this;
        }

        public Criteria andAttackEnhanceEqualTo(String value) {
            addCriterion("f_attack_enhance =", value, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceNotEqualTo(String value) {
            addCriterion("f_attack_enhance <>", value, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceGreaterThan(String value) {
            addCriterion("f_attack_enhance >", value, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceGreaterThanOrEqualTo(String value) {
            addCriterion("f_attack_enhance >=", value, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceLessThan(String value) {
            addCriterion("f_attack_enhance <", value, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceLessThanOrEqualTo(String value) {
            addCriterion("f_attack_enhance <=", value, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceLike(String value) {
            addCriterion("f_attack_enhance like", value, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceNotLike(String value) {
            addCriterion("f_attack_enhance not like", value, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceIn(List values) {
            addCriterion("f_attack_enhance in", values, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceNotIn(List values) {
            addCriterion("f_attack_enhance not in", values, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceBetween(String value1, String value2) {
            addCriterion("f_attack_enhance between", value1, value2, "attackEnhance");
            return this;
        }

        public Criteria andAttackEnhanceNotBetween(String value1, String value2) {
            addCriterion("f_attack_enhance not between", value1, value2, "attackEnhance");
            return this;
        }

        public Criteria andReboundHurtIsNull() {
            addCriterion("f_rebound_hurt is null");
            return this;
        }

        public Criteria andReboundHurtIsNotNull() {
            addCriterion("f_rebound_hurt is not null");
            return this;
        }

        public Criteria andReboundHurtEqualTo(String value) {
            addCriterion("f_rebound_hurt =", value, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtNotEqualTo(String value) {
            addCriterion("f_rebound_hurt <>", value, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtGreaterThan(String value) {
            addCriterion("f_rebound_hurt >", value, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtGreaterThanOrEqualTo(String value) {
            addCriterion("f_rebound_hurt >=", value, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtLessThan(String value) {
            addCriterion("f_rebound_hurt <", value, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtLessThanOrEqualTo(String value) {
            addCriterion("f_rebound_hurt <=", value, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtLike(String value) {
            addCriterion("f_rebound_hurt like", value, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtNotLike(String value) {
            addCriterion("f_rebound_hurt not like", value, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtIn(List values) {
            addCriterion("f_rebound_hurt in", values, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtNotIn(List values) {
            addCriterion("f_rebound_hurt not in", values, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtBetween(String value1, String value2) {
            addCriterion("f_rebound_hurt between", value1, value2, "reboundHurt");
            return this;
        }

        public Criteria andReboundHurtNotBetween(String value1, String value2) {
            addCriterion("f_rebound_hurt not between", value1, value2, "reboundHurt");
            return this;
        }

        public Criteria andIgnoreDefenceIsNull() {
            addCriterion("f_ignore_defence is null");
            return this;
        }

        public Criteria andIgnoreDefenceIsNotNull() {
            addCriterion("f_ignore_defence is not null");
            return this;
        }

        public Criteria andIgnoreDefenceEqualTo(String value) {
            addCriterion("f_ignore_defence =", value, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceNotEqualTo(String value) {
            addCriterion("f_ignore_defence <>", value, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceGreaterThan(String value) {
            addCriterion("f_ignore_defence >", value, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceGreaterThanOrEqualTo(String value) {
            addCriterion("f_ignore_defence >=", value, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceLessThan(String value) {
            addCriterion("f_ignore_defence <", value, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceLessThanOrEqualTo(String value) {
            addCriterion("f_ignore_defence <=", value, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceLike(String value) {
            addCriterion("f_ignore_defence like", value, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceNotLike(String value) {
            addCriterion("f_ignore_defence not like", value, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceIn(List values) {
            addCriterion("f_ignore_defence in", values, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceNotIn(List values) {
            addCriterion("f_ignore_defence not in", values, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceBetween(String value1, String value2) {
            addCriterion("f_ignore_defence between", value1, value2, "ignoreDefence");
            return this;
        }

        public Criteria andIgnoreDefenceNotBetween(String value1, String value2) {
            addCriterion("f_ignore_defence not between", value1, value2, "ignoreDefence");
            return this;
        }

        public Criteria andHurtDerateIsNull() {
            addCriterion("f_hurt_derate is null");
            return this;
        }

        public Criteria andHurtDerateIsNotNull() {
            addCriterion("f_hurt_derate is not null");
            return this;
        }

        public Criteria andHurtDerateEqualTo(String value) {
            addCriterion("f_hurt_derate =", value, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateNotEqualTo(String value) {
            addCriterion("f_hurt_derate <>", value, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateGreaterThan(String value) {
            addCriterion("f_hurt_derate >", value, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateGreaterThanOrEqualTo(String value) {
            addCriterion("f_hurt_derate >=", value, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateLessThan(String value) {
            addCriterion("f_hurt_derate <", value, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateLessThanOrEqualTo(String value) {
            addCriterion("f_hurt_derate <=", value, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateLike(String value) {
            addCriterion("f_hurt_derate like", value, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateNotLike(String value) {
            addCriterion("f_hurt_derate not like", value, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateIn(List values) {
            addCriterion("f_hurt_derate in", values, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateNotIn(List values) {
            addCriterion("f_hurt_derate not in", values, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateBetween(String value1, String value2) {
            addCriterion("f_hurt_derate between", value1, value2, "hurtDerate");
            return this;
        }

        public Criteria andHurtDerateNotBetween(String value1, String value2) {
            addCriterion("f_hurt_derate not between", value1, value2, "hurtDerate");
            return this;
        }

        public Criteria andHiddenDerateIsNull() {
            addCriterion("f_hidden_derate is null");
            return this;
        }

        public Criteria andHiddenDerateIsNotNull() {
            addCriterion("f_hidden_derate is not null");
            return this;
        }

        public Criteria andHiddenDerateEqualTo(String value) {
            addCriterion("f_hidden_derate =", value, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateNotEqualTo(String value) {
            addCriterion("f_hidden_derate <>", value, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateGreaterThan(String value) {
            addCriterion("f_hidden_derate >", value, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateGreaterThanOrEqualTo(String value) {
            addCriterion("f_hidden_derate >=", value, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateLessThan(String value) {
            addCriterion("f_hidden_derate <", value, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateLessThanOrEqualTo(String value) {
            addCriterion("f_hidden_derate <=", value, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateLike(String value) {
            addCriterion("f_hidden_derate like", value, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateNotLike(String value) {
            addCriterion("f_hidden_derate not like", value, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateIn(List values) {
            addCriterion("f_hidden_derate in", values, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateNotIn(List values) {
            addCriterion("f_hidden_derate not in", values, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateBetween(String value1, String value2) {
            addCriterion("f_hidden_derate between", value1, value2, "hiddenDerate");
            return this;
        }

        public Criteria andHiddenDerateNotBetween(String value1, String value2) {
            addCriterion("f_hidden_derate not between", value1, value2, "hiddenDerate");
            return this;
        }
    }
}
