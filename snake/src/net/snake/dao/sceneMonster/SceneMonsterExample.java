package net.snake.dao.sceneMonster;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SceneMonsterExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	public SceneMonsterExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	protected SceneMonsterExample(SceneMonsterExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table t_scene_monster
	 * @ibatorgenerated  Thu Jun 09 15:59:17 CST 2011
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;
		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}
		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}
		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}
		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}
		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}
		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}
		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}
		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}
		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}
		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}
		public Criteria andIdIsNull() {
			addCriterion("f_id is null");
			return this;
		}
		public Criteria andIdIsNotNull() {
			addCriterion("f_id is not null");
			return this;
		}
		public Criteria andIdEqualTo(Integer value) {
			addCriterion("f_id =", value, "id");
			return this;
		}
		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("f_id <>", value, "id");
			return this;
		}
		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("f_id >", value, "id");
			return this;
		}
		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("f_id >=", value, "id");
			return this;
		}
		public Criteria andIdLessThan(Integer value) {
			addCriterion("f_id <", value, "id");
			return this;
		}
		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("f_id <=", value, "id");
			return this;
		}
		public Criteria andIdIn(List values) {
			addCriterion("f_id in", values, "id");
			return this;
		}
		public Criteria andIdNotIn(List values) {
			addCriterion("f_id not in", values, "id");
			return this;
		}
		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("f_id between", value1, value2, "id");
			return this;
		}
		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("f_id not between", value1, value2, "id");
			return this;
		}
		public Criteria andModelIsNull() {
			addCriterion("f_model is null");
			return this;
		}
		public Criteria andModelIsNotNull() {
			addCriterion("f_model is not null");
			return this;
		}
		public Criteria andModelEqualTo(Integer value) {
			addCriterion("f_model =", value, "model");
			return this;
		}
		public Criteria andModelNotEqualTo(Integer value) {
			addCriterion("f_model <>", value, "model");
			return this;
		}
		public Criteria andModelGreaterThan(Integer value) {
			addCriterion("f_model >", value, "model");
			return this;
		}
		public Criteria andModelGreaterThanOrEqualTo(Integer value) {
			addCriterion("f_model >=", value, "model");
			return this;
		}
		public Criteria andModelLessThan(Integer value) {
			addCriterion("f_model <", value, "model");
			return this;
		}
		public Criteria andModelLessThanOrEqualTo(Integer value) {
			addCriterion("f_model <=", value, "model");
			return this;
		}
		public Criteria andModelIn(List values) {
			addCriterion("f_model in", values, "model");
			return this;
		}
		public Criteria andModelNotIn(List values) {
			addCriterion("f_model not in", values, "model");
			return this;
		}
		public Criteria andModelBetween(Integer value1, Integer value2) {
			addCriterion("f_model between", value1, value2, "model");
			return this;
		}
		public Criteria andModelNotBetween(Integer value1, Integer value2) {
			addCriterion("f_model not between", value1, value2, "model");
			return this;
		}
		public Criteria andXIsNull() {
			addCriterion("f_x is null");
			return this;
		}
		public Criteria andXIsNotNull() {
			addCriterion("f_x is not null");
			return this;
		}
		public Criteria andXEqualTo(Short value) {
			addCriterion("f_x =", value, "x");
			return this;
		}
		public Criteria andXNotEqualTo(Short value) {
			addCriterion("f_x <>", value, "x");
			return this;
		}
		public Criteria andXGreaterThan(Short value) {
			addCriterion("f_x >", value, "x");
			return this;
		}
		public Criteria andXGreaterThanOrEqualTo(Short value) {
			addCriterion("f_x >=", value, "x");
			return this;
		}
		public Criteria andXLessThan(Short value) {
			addCriterion("f_x <", value, "x");
			return this;
		}
		public Criteria andXLessThanOrEqualTo(Short value) {
			addCriterion("f_x <=", value, "x");
			return this;
		}
		public Criteria andXIn(List values) {
			addCriterion("f_x in", values, "x");
			return this;
		}
		public Criteria andXNotIn(List values) {
			addCriterion("f_x not in", values, "x");
			return this;
		}
		public Criteria andXBetween(Short value1, Short value2) {
			addCriterion("f_x between", value1, value2, "x");
			return this;
		}
		public Criteria andXNotBetween(Short value1, Short value2) {
			addCriterion("f_x not between", value1, value2, "x");
			return this;
		}
		public Criteria andYIsNull() {
			addCriterion("f_y is null");
			return this;
		}
		public Criteria andYIsNotNull() {
			addCriterion("f_y is not null");
			return this;
		}
		public Criteria andYEqualTo(Short value) {
			addCriterion("f_y =", value, "y");
			return this;
		}
		public Criteria andYNotEqualTo(Short value) {
			addCriterion("f_y <>", value, "y");
			return this;
		}
		public Criteria andYGreaterThan(Short value) {
			addCriterion("f_y >", value, "y");
			return this;
		}
		public Criteria andYGreaterThanOrEqualTo(Short value) {
			addCriterion("f_y >=", value, "y");
			return this;
		}
		public Criteria andYLessThan(Short value) {
			addCriterion("f_y <", value, "y");
			return this;
		}
		public Criteria andYLessThanOrEqualTo(Short value) {
			addCriterion("f_y <=", value, "y");
			return this;
		}
		public Criteria andYIn(List values) {
			addCriterion("f_y in", values, "y");
			return this;
		}
		public Criteria andYNotIn(List values) {
			addCriterion("f_y not in", values, "y");
			return this;
		}
		public Criteria andYBetween(Short value1, Short value2) {
			addCriterion("f_y between", value1, value2, "y");
			return this;
		}
		public Criteria andYNotBetween(Short value1, Short value2) {
			addCriterion("f_y not between", value1, value2, "y");
			return this;
		}
		public Criteria andMapIdIsNull() {
			addCriterion("f_map_id is null");
			return this;
		}
		public Criteria andMapIdIsNotNull() {
			addCriterion("f_map_id is not null");
			return this;
		}
		public Criteria andMapIdEqualTo(Integer value) {
			addCriterion("f_map_id =", value, "mapId");
			return this;
		}
		public Criteria andMapIdNotEqualTo(Integer value) {
			addCriterion("f_map_id <>", value, "mapId");
			return this;
		}
		public Criteria andMapIdGreaterThan(Integer value) {
			addCriterion("f_map_id >", value, "mapId");
			return this;
		}
		public Criteria andMapIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("f_map_id >=", value, "mapId");
			return this;
		}
		public Criteria andMapIdLessThan(Integer value) {
			addCriterion("f_map_id <", value, "mapId");
			return this;
		}
		public Criteria andMapIdLessThanOrEqualTo(Integer value) {
			addCriterion("f_map_id <=", value, "mapId");
			return this;
		}
		public Criteria andMapIdIn(List values) {
			addCriterion("f_map_id in", values, "mapId");
			return this;
		}
		public Criteria andMapIdNotIn(List values) {
			addCriterion("f_map_id not in", values, "mapId");
			return this;
		}
		public Criteria andMapIdBetween(Integer value1, Integer value2) {
			addCriterion("f_map_id between", value1, value2, "mapId");
			return this;
		}
		public Criteria andMapIdNotBetween(Integer value1, Integer value2) {
			addCriterion("f_map_id not between", value1, value2, "mapId");
			return this;
		}
		public Criteria andIsreplacemnetIsNull() {
			addCriterion("f_isReplacemnet is null");
			return this;
		}
		public Criteria andIsreplacemnetIsNotNull() {
			addCriterion("f_isReplacemnet is not null");
			return this;
		}
		public Criteria andIsreplacemnetEqualTo(Integer value) {
			addCriterion("f_isReplacemnet =", value, "isreplacemnet");
			return this;
		}
		public Criteria andIsreplacemnetNotEqualTo(Integer value) {
			addCriterion("f_isReplacemnet <>", value, "isreplacemnet");
			return this;
		}
		public Criteria andIsreplacemnetGreaterThan(Integer value) {
			addCriterion("f_isReplacemnet >", value, "isreplacemnet");
			return this;
		}
		public Criteria andIsreplacemnetGreaterThanOrEqualTo(Integer value) {
			addCriterion("f_isReplacemnet >=", value, "isreplacemnet");
			return this;
		}
		public Criteria andIsreplacemnetLessThan(Integer value) {
			addCriterion("f_isReplacemnet <", value, "isreplacemnet");
			return this;
		}
		public Criteria andIsreplacemnetLessThanOrEqualTo(Integer value) {
			addCriterion("f_isReplacemnet <=", value, "isreplacemnet");
			return this;
		}
		public Criteria andIsreplacemnetIn(List values) {
			addCriterion("f_isReplacemnet in", values, "isreplacemnet");
			return this;
		}
		public Criteria andIsreplacemnetNotIn(List values) {
			addCriterion("f_isReplacemnet not in", values, "isreplacemnet");
			return this;
		}
		public Criteria andIsreplacemnetBetween(Integer value1, Integer value2) {
			addCriterion("f_isReplacemnet between", value1, value2, "isreplacemnet");
			return this;
		}
		public Criteria andIsreplacemnetNotBetween(Integer value1, Integer value2) {
			addCriterion("f_isReplacemnet not between", value1, value2, "isreplacemnet");
			return this;
		}
		public Criteria andGamelevelIsNull() {
			addCriterion("f_gamelevel is null");
			return this;
		}
		public Criteria andGamelevelIsNotNull() {
			addCriterion("f_gamelevel is not null");
			return this;
		}
		public Criteria andGamelevelEqualTo(Integer value) {
			addCriterion("f_gamelevel =", value, "gamelevel");
			return this;
		}
		public Criteria andGamelevelNotEqualTo(Integer value) {
			addCriterion("f_gamelevel <>", value, "gamelevel");
			return this;
		}
		public Criteria andGamelevelGreaterThan(Integer value) {
			addCriterion("f_gamelevel >", value, "gamelevel");
			return this;
		}
		public Criteria andGamelevelGreaterThanOrEqualTo(Integer value) {
			addCriterion("f_gamelevel >=", value, "gamelevel");
			return this;
		}
		public Criteria andGamelevelLessThan(Integer value) {
			addCriterion("f_gamelevel <", value, "gamelevel");
			return this;
		}
		public Criteria andGamelevelLessThanOrEqualTo(Integer value) {
			addCriterion("f_gamelevel <=", value, "gamelevel");
			return this;
		}
		public Criteria andGamelevelIn(List values) {
			addCriterion("f_gamelevel in", values, "gamelevel");
			return this;
		}
		public Criteria andGamelevelNotIn(List values) {
			addCriterion("f_gamelevel not in", values, "gamelevel");
			return this;
		}
		public Criteria andGamelevelBetween(Integer value1, Integer value2) {
			addCriterion("f_gamelevel between", value1, value2, "gamelevel");
			return this;
		}
		public Criteria andGamelevelNotBetween(Integer value1, Integer value2) {
			addCriterion("f_gamelevel not between", value1, value2, "gamelevel");
			return this;
		}
		public Criteria andMovepathIsNull() {
			addCriterion("f_movepath is null");
			return this;
		}
		public Criteria andMovepathIsNotNull() {
			addCriterion("f_movepath is not null");
			return this;
		}
		public Criteria andMovepathEqualTo(String value) {
			addCriterion("f_movepath =", value, "movepath");
			return this;
		}
		public Criteria andMovepathNotEqualTo(String value) {
			addCriterion("f_movepath <>", value, "movepath");
			return this;
		}
		public Criteria andMovepathGreaterThan(String value) {
			addCriterion("f_movepath >", value, "movepath");
			return this;
		}
		public Criteria andMovepathGreaterThanOrEqualTo(String value) {
			addCriterion("f_movepath >=", value, "movepath");
			return this;
		}
		public Criteria andMovepathLessThan(String value) {
			addCriterion("f_movepath <", value, "movepath");
			return this;
		}
		public Criteria andMovepathLessThanOrEqualTo(String value) {
			addCriterion("f_movepath <=", value, "movepath");
			return this;
		}
		public Criteria andMovepathLike(String value) {
			addCriterion("f_movepath like", value, "movepath");
			return this;
		}
		public Criteria andMovepathNotLike(String value) {
			addCriterion("f_movepath not like", value, "movepath");
			return this;
		}
		public Criteria andMovepathIn(List values) {
			addCriterion("f_movepath in", values, "movepath");
			return this;
		}
		public Criteria andMovepathNotIn(List values) {
			addCriterion("f_movepath not in", values, "movepath");
			return this;
		}
		public Criteria andMovepathBetween(String value1, String value2) {
			addCriterion("f_movepath between", value1, value2, "movepath");
			return this;
		}
		public Criteria andMovepathNotBetween(String value1, String value2) {
			addCriterion("f_movepath not between", value1, value2, "movepath");
			return this;
		}
		public Criteria andReliveIsNull() {
			addCriterion("f_relive is null");
			return this;
		}
		public Criteria andReliveIsNotNull() {
			addCriterion("f_relive is not null");
			return this;
		}
		public Criteria andReliveEqualTo(Integer value) {
			addCriterion("f_relive =", value, "relive");
			return this;
		}
		public Criteria andReliveNotEqualTo(Integer value) {
			addCriterion("f_relive <>", value, "relive");
			return this;
		}
		public Criteria andReliveGreaterThan(Integer value) {
			addCriterion("f_relive >", value, "relive");
			return this;
		}
		public Criteria andReliveGreaterThanOrEqualTo(Integer value) {
			addCriterion("f_relive >=", value, "relive");
			return this;
		}
		public Criteria andReliveLessThan(Integer value) {
			addCriterion("f_relive <", value, "relive");
			return this;
		}
		public Criteria andReliveLessThanOrEqualTo(Integer value) {
			addCriterion("f_relive <=", value, "relive");
			return this;
		}
		public Criteria andReliveIn(List values) {
			addCriterion("f_relive in", values, "relive");
			return this;
		}
		public Criteria andReliveNotIn(List values) {
			addCriterion("f_relive not in", values, "relive");
			return this;
		}
		public Criteria andReliveBetween(Integer value1, Integer value2) {
			addCriterion("f_relive between", value1, value2, "relive");
			return this;
		}
		public Criteria andReliveNotBetween(Integer value1, Integer value2) {
			addCriterion("f_relive not between", value1, value2, "relive");
			return this;
		}
		public Criteria andActivityidIsNull() {
			addCriterion("f_activityid is null");
			return this;
		}
		public Criteria andActivityidIsNotNull() {
			addCriterion("f_activityid is not null");
			return this;
		}
		public Criteria andActivityidEqualTo(Integer value) {
			addCriterion("f_activityid =", value, "activityid");
			return this;
		}
		public Criteria andActivityidNotEqualTo(Integer value) {
			addCriterion("f_activityid <>", value, "activityid");
			return this;
		}
		public Criteria andActivityidGreaterThan(Integer value) {
			addCriterion("f_activityid >", value, "activityid");
			return this;
		}
		public Criteria andActivityidGreaterThanOrEqualTo(Integer value) {
			addCriterion("f_activityid >=", value, "activityid");
			return this;
		}
		public Criteria andActivityidLessThan(Integer value) {
			addCriterion("f_activityid <", value, "activityid");
			return this;
		}
		public Criteria andActivityidLessThanOrEqualTo(Integer value) {
			addCriterion("f_activityid <=", value, "activityid");
			return this;
		}
		public Criteria andActivityidIn(List values) {
			addCriterion("f_activityid in", values, "activityid");
			return this;
		}
		public Criteria andActivityidNotIn(List values) {
			addCriterion("f_activityid not in", values, "activityid");
			return this;
		}
		public Criteria andActivityidBetween(Integer value1, Integer value2) {
			addCriterion("f_activityid between", value1, value2, "activityid");
			return this;
		}
		public Criteria andActivityidNotBetween(Integer value1, Integer value2) {
			addCriterion("f_activityid not between", value1, value2, "activityid");
			return this;
		}
		public Criteria andModelNameIsNull() {
			addCriterion("f_model_name is null");
			return this;
		}
		public Criteria andModelNameIsNotNull() {
			addCriterion("f_model_name is not null");
			return this;
		}
		public Criteria andModelNameEqualTo(String value) {
			addCriterion("f_model_name =", value, "modelName");
			return this;
		}
		public Criteria andModelNameNotEqualTo(String value) {
			addCriterion("f_model_name <>", value, "modelName");
			return this;
		}
		public Criteria andModelNameGreaterThan(String value) {
			addCriterion("f_model_name >", value, "modelName");
			return this;
		}
		public Criteria andModelNameGreaterThanOrEqualTo(String value) {
			addCriterion("f_model_name >=", value, "modelName");
			return this;
		}
		public Criteria andModelNameLessThan(String value) {
			addCriterion("f_model_name <", value, "modelName");
			return this;
		}
		public Criteria andModelNameLessThanOrEqualTo(String value) {
			addCriterion("f_model_name <=", value, "modelName");
			return this;
		}
		public Criteria andModelNameLike(String value) {
			addCriterion("f_model_name like", value, "modelName");
			return this;
		}
		public Criteria andModelNameNotLike(String value) {
			addCriterion("f_model_name not like", value, "modelName");
			return this;
		}
		public Criteria andModelNameIn(List values) {
			addCriterion("f_model_name in", values, "modelName");
			return this;
		}
		public Criteria andModelNameNotIn(List values) {
			addCriterion("f_model_name not in", values, "modelName");
			return this;
		}
		public Criteria andModelNameBetween(String value1, String value2) {
			addCriterion("f_model_name between", value1, value2, "modelName");
			return this;
		}
		public Criteria andModelNameNotBetween(String value1, String value2) {
			addCriterion("f_model_name not between", value1, value2, "modelName");
			return this;
		}
		public Criteria andMarkIsNull() {
			addCriterion("f_mark is null");
			return this;
		}
		public Criteria andMarkIsNotNull() {
			addCriterion("f_mark is not null");
			return this;
		}
		public Criteria andMarkEqualTo(Integer value) {
			addCriterion("f_mark =", value, "mark");
			return this;
		}
		public Criteria andMarkNotEqualTo(Integer value) {
			addCriterion("f_mark <>", value, "mark");
			return this;
		}
		public Criteria andMarkGreaterThan(Integer value) {
			addCriterion("f_mark >", value, "mark");
			return this;
		}
		public Criteria andMarkGreaterThanOrEqualTo(Integer value) {
			addCriterion("f_mark >=", value, "mark");
			return this;
		}
		public Criteria andMarkLessThan(Integer value) {
			addCriterion("f_mark <", value, "mark");
			return this;
		}
		public Criteria andMarkLessThanOrEqualTo(Integer value) {
			addCriterion("f_mark <=", value, "mark");
			return this;
		}
		public Criteria andMarkIn(List values) {
			addCriterion("f_mark in", values, "mark");
			return this;
		}
		public Criteria andMarkNotIn(List values) {
			addCriterion("f_mark not in", values, "mark");
			return this;
		}
		public Criteria andMarkBetween(Integer value1, Integer value2) {
			addCriterion("f_mark between", value1, value2, "mark");
			return this;
		}
		public Criteria andMarkNotBetween(Integer value1, Integer value2) {
			addCriterion("f_mark not between", value1, value2, "mark");
			return this;
		}
		public Criteria andIsIsNull() {
			addCriterion("f_is is null");
			return this;
		}
		public Criteria andIsIsNotNull() {
			addCriterion("f_is is not null");
			return this;
		}
		public Criteria andIsEqualTo(Byte value) {
			addCriterion("f_is =", value, "is");
			return this;
		}
		public Criteria andIsNotEqualTo(Byte value) {
			addCriterion("f_is <>", value, "is");
			return this;
		}
		public Criteria andIsGreaterThan(Byte value) {
			addCriterion("f_is >", value, "is");
			return this;
		}
		public Criteria andIsGreaterThanOrEqualTo(Byte value) {
			addCriterion("f_is >=", value, "is");
			return this;
		}
		public Criteria andIsLessThan(Byte value) {
			addCriterion("f_is <", value, "is");
			return this;
		}
		public Criteria andIsLessThanOrEqualTo(Byte value) {
			addCriterion("f_is <=", value, "is");
			return this;
		}
		public Criteria andIsIn(List values) {
			addCriterion("f_is in", values, "is");
			return this;
		}
		public Criteria andIsNotIn(List values) {
			addCriterion("f_is not in", values, "is");
			return this;
		}
		public Criteria andIsBetween(Byte value1, Byte value2) {
			addCriterion("f_is between", value1, value2, "is");
			return this;
		}
		public Criteria andIsNotBetween(Byte value1, Byte value2) {
			addCriterion("f_is not between", value1, value2, "is");
			return this;
		}
	}
}
