<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="t_horse_character_view">
	<resultMap class="net.snake.gamemodel.pet.bean.HorseCharacterView" id="HorseCharacterView">
		<result column="f_id" jdbcType="INTEGER" property="id" />
		<result column="f_character_id" jdbcType="INTEGER" property="characterId" />
		<result column="f_name" jdbcType="VARCHAR" property="name" />
		<result column="f_account_id" jdbcType="INTEGER" property="accountId" />
		<result column="f_horse_price" jdbcType="INTEGER" property="horsePrice" />
		<result column="f_horse_model_id" jdbcType="INTEGER" property="horseModelId" />
		<result column="f_grade" jdbcType="INTEGER" property="grade" />
	</resultMap>
	<select id="getRankingma" parameterClass="java.util.Map" resultMap="HorseCharacterView">
		select `t_character_horse`.`f_id` AS
		`f_id`,`t_character_horse`.`f_character_id` AS
		`f_character_id`,`t_character`.`f_name` AS
		`f_name`,`t_character`.`f_account_id` AS
		`f_account_id`,`t_character_horse`.`f_horse_price` AS
		`f_horse_price`,`t_character_horse`.`f_horse_model_id` AS
		`f_horse_model_id`,`t_character_horse`.`f_grade` AS `f_grade` from
		(`t_character_horse` join `t_character`
		on((`t_character`.`f_id` =
		`t_character_horse`.`f_character_id`)))
		WHERE f_horse_price&gt;500 and f_account_id not in ($id$)
		order by `t_character_horse`.`f_horse_price`
		desc,`t_character_horse`.`f_grade`
		desc,`t_character_horse`.`f_character_id` desc
		LIMIT 0,100
	</select>

	<select id="getRankingmatongji" parameterClass="java.util.Map" resultMap="HorseCharacterView">
		select `t_character_horse`.`f_id` AS
		`f_id`,`t_character_horse`.`f_character_id` AS
		`f_character_id`,`t_character`.`f_name` AS
		`f_name`,`t_character`.`f_account_id` AS
		`f_account_id`,`t_character_horse`.`f_horse_price` AS
		`f_horse_price`,`t_character_horse`.`f_horse_model_id` AS
		`f_horse_model_id`,`t_character_horse`.`f_grade` AS `f_grade` from
		(`t_character_horse` join `t_character`
		on((`t_character`.`f_id` =
		`t_character_horse`.`f_character_id`)))
		WHERE
		f_horse_model_id =#horseModelId#
		and f_account_id not in ($id$)
		ORDER BY
		f_horse_price DESC,f_grade
		DESC,f_character_id DESC
		LIMIT 0,100
	</select>
</sqlMap>