package net.snake.dao.language;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class LanguageExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	public LanguageExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	protected LanguageExample(LanguageExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table t_language
	 * @ibatorgenerated  Sat May 07 11:44:01 CST 2011
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;
		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}
		public boolean isValid() {
			return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
		}
		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}
		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}
		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}
		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}
		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}
		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}
		protected void addCriterion(String condition, List values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}
		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}
		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return this;
		}
		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return this;
		}
		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return this;
		}
		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return this;
		}
		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return this;
		}
		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return this;
		}
		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return this;
		}
		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return this;
		}
		public Criteria andIdIn(List values) {
			addCriterion("id in", values, "id");
			return this;
		}
		public Criteria andIdNotIn(List values) {
			addCriterion("id not in", values, "id");
			return this;
		}
		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return this;
		}
		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return this;
		}
		public Criteria andValueIsNull() {
			addCriterion("value is null");
			return this;
		}
		public Criteria andValueIsNotNull() {
			addCriterion("value is not null");
			return this;
		}
		public Criteria andValueEqualTo(String value) {
			addCriterion("value =", value, "value");
			return this;
		}
		public Criteria andValueNotEqualTo(String value) {
			addCriterion("value <>", value, "value");
			return this;
		}
		public Criteria andValueGreaterThan(String value) {
			addCriterion("value >", value, "value");
			return this;
		}
		public Criteria andValueGreaterThanOrEqualTo(String value) {
			addCriterion("value >=", value, "value");
			return this;
		}
		public Criteria andValueLessThan(String value) {
			addCriterion("value <", value, "value");
			return this;
		}
		public Criteria andValueLessThanOrEqualTo(String value) {
			addCriterion("value <=", value, "value");
			return this;
		}
		public Criteria andValueLike(String value) {
			addCriterion("value like", value, "value");
			return this;
		}
		public Criteria andValueNotLike(String value) {
			addCriterion("value not like", value, "value");
			return this;
		}
		public Criteria andValueIn(List values) {
			addCriterion("value in", values, "value");
			return this;
		}
		public Criteria andValueNotIn(List values) {
			addCriterion("value not in", values, "value");
			return this;
		}
		public Criteria andValueBetween(String value1, String value2) {
			addCriterion("value between", value1, value2, "value");
			return this;
		}
		public Criteria andValueNotBetween(String value1, String value2) {
			addCriterion("value not between", value1, value2, "value");
			return this;
		}
		public Criteria andValueI18nIsNull() {
			addCriterion("value_i18n is null");
			return this;
		}
		public Criteria andValueI18nIsNotNull() {
			addCriterion("value_i18n is not null");
			return this;
		}
		public Criteria andValueI18nEqualTo(String value) {
			addCriterion("value_i18n =", value, "valueI18n");
			return this;
		}
		public Criteria andValueI18nNotEqualTo(String value) {
			addCriterion("value_i18n <>", value, "valueI18n");
			return this;
		}
		public Criteria andValueI18nGreaterThan(String value) {
			addCriterion("value_i18n >", value, "valueI18n");
			return this;
		}
		public Criteria andValueI18nGreaterThanOrEqualTo(String value) {
			addCriterion("value_i18n >=", value, "valueI18n");
			return this;
		}
		public Criteria andValueI18nLessThan(String value) {
			addCriterion("value_i18n <", value, "valueI18n");
			return this;
		}
		public Criteria andValueI18nLessThanOrEqualTo(String value) {
			addCriterion("value_i18n <=", value, "valueI18n");
			return this;
		}
		public Criteria andValueI18nLike(String value) {
			addCriterion("value_i18n like", value, "valueI18n");
			return this;
		}
		public Criteria andValueI18nNotLike(String value) {
			addCriterion("value_i18n not like", value, "valueI18n");
			return this;
		}
		public Criteria andValueI18nIn(List values) {
			addCriterion("value_i18n in", values, "valueI18n");
			return this;
		}
		public Criteria andValueI18nNotIn(List values) {
			addCriterion("value_i18n not in", values, "valueI18n");
			return this;
		}
		public Criteria andValueI18nBetween(String value1, String value2) {
			addCriterion("value_i18n between", value1, value2, "valueI18n");
			return this;
		}
		public Criteria andValueI18nNotBetween(String value1, String value2) {
			addCriterion("value_i18n not between", value1, value2, "valueI18n");
			return this;
		}
	}
}
