<?xml version="1.0" encoding="UTF-8"?>
<project name="ACT_Server" default="jar" basedir=".">
	<property name="src" location="src" />
	<property name="bin" location="bin" />
	<property name="tools" location="tools" />
	<property name="conf" location="conf" />
	<property name="lib" location="${basedir}/../common_libs" />
	<property name="server_lib" location="server" />
	<property name="parent_dir" location="${basedir}/../" />
	<property name="build" location="build" />
	<property name="build.classes" location="${build}/classes" />
	<property name="build.libs" location="${build}/libs" />
	<property name="proguard.path" location="tools/proguard4.7" />
	<property name="main.class" value="act.core.ACTGame" />
	<property name="main.jar.name" value="ACTGame.jar" />
	<property name="obfused.jar.name" value="ACTGame_obfused.jar" />
	
	<taskdef resource="proguard/ant/task.properties"
	         classpath="${proguard.path}/lib/proguard.jar" />
	<path id="common.classpath">
        <fileset dir="${lib}">
            <include name="*.jar"/>
        </fileset>
		<fileset dir="${server_lib}">
            <include name="*.jar"/>
        </fileset>
    </path>

	<target name="verifyRequirements" description="Checks if the necessary requirements for building L2J are fulfilled">
		<available classname="javax.script.ScriptContext" property="JDK6.present" />
		<fail unless="JDK6.present" message="JDK 6 or greater is required." />
	</target>

	<target name="init" depends="clean, verifyRequirements" description="Create the output directories.">
		<mkdir dir="${build}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${build.libs}" />
	</target>

	<target name="compile" depends="init" description="Compile the source.">
		<javac destdir="${build.classes}" optimize="on" debug="true" source="1.6" target="1.6" nowarn="on" includeantruntime="on">
			<compilerarg line="-encoding UTF-8"/>
			<src path="${src}" />
			<classpath refid="common.classpath" />
		</javac>
	</target>
	
	<target name="jar" depends="compile" description="Create the jar file">
	
		<pathconvert property="mf.classpath" pathsep=" " description="create mf classpath string">
		  <mapper>
			<chainedmapper>
			  <!-- bb -->
			  <flattenmapper />
			  <!-- cc -->
			  <globmapper from="*" to="libs/*" />
			 </chainedmapper>
		  </mapper>
		  <path refid="common.classpath" description="source classpath" />
		</pathconvert>
		
		<jar compress="true" destfile="${build}/${main.jar.name}">
			<fileset dir="${build.classes}">
			</fileset>
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Built-Date" value="${TODAY}" />
				<attribute name="Main-Class" value="${main.class}"/>
				<attribute name="Class-Path" value="${mf.classpath}" />
			</manifest>
		</jar>
		
		<copy todir="${build}">
			<fileset dir="${tools}">
				<include name="*.sh" />
			</fileset>
		</copy>
		
		<copy todir="${build}/conf">
			<fileset dir="${conf}">
				<include name="*.*" />
				<exclude name="config.xml" />
			</fileset>
		</copy>

		<copy todir="${build}/conf">
			<fileset dir="${parent_dir}" includes="config.xml" />
		</copy>
		
		<copy todir="${build.libs}">
			<path refid="common.classpath" description="copy common classpath to deployed path" />
		</copy>
		
	</target>
	
	<target name="obfuscate" depends="jar"
	   description="Obfuscate compiled classes">
	   <proguard>
	   		<libraryjar dir="${build.libs}" />
	   		<libraryjar file="${java.home}/lib/rt.jar" />
	   		  -dontnote
	          -injars      ${build}\${main.jar.name}
	          -outjars     ${build}\${obfused.jar.name}
	   		  -keep public class ${main.class} {
	   	           public static void main(java.lang.String[]);
	   	      }
	   	
	   		  -keep public class act.core.ACTServer {
	   		public void *(...);
	   	}
	   </proguard>
		<move file="${build}/${obfused.jar.name}" tofile="${build}/${main.jar.name}" />
	</target>
	<target name="clean" description="Remove the output directories">
		<delete dir="${build}" />
	</target>
</project>
